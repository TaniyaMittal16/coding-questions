HackerRank has organized a hiring contest, from December until the end of January. The programmer who solves the most questions in this contest, will get an interview, which is the first step into getting hired in HackerRank. If multiple programmers have solved the highest number of questions (the case of a draw), the winner is the programmer with the maximum number of solved questions appearing first in the list as shown in the following example:

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String name_of_winner = null;
        int ques = 0;
        for(int a0 = 0; a0 < n; a0++){
            String name = in.next();
            int d = Math.abs(in.nextInt() - in.nextInt());
            if(ques<d){
                name_of_winner = name;
                ques = ques+d;
                d = ques-d;
                ques = ques-d;
            }
        }
        System.out.println(name_of_winner+" "+ques);
        in.close();
    }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
Q - Smallest Permutation
Ans - n=int(input())
p=[int(x) for x in input().strip().split()]

m=[]
for i in range(n):
    a=list(input().strip())
    m.append(a)
for k in range(n*2):
    for i in range(n):
        for j in range(n):
            #print(i,j,"---",m[i][j])

            if(int(m[i][j])== 1):
               # print(i,j,"==========",p[i],p[j])
                if((i<j and p[i]>p[j]) or (i>j and p[i]<p[j])):
                   
                    temp=p[i]
                    p[i]=p[j]
                    p[j]=temp
                
                
for x in p:
    print(x,end=" ")

Q - Help Tushar
Ans - import java.util.Scanner;


public class Solution {


    public static void main(String[] args) 
    {
        Scanner scan = new Scanner(System.in);
        int T = scan.nextInt();scan.nextLine();
        
        for(int i=0;i<T;i++)
        {
            String s = scan.nextLine();
            int count=0;
            for(int j=0;j<s.length()/2;j++)
                count+=Math.abs(s.charAt(j)-s.charAt(s.length()-1-j));
            System.out.println(count);
        }
    }
}

Q-2. Bank Compare
Ans - #include <stdio.h>#include<math.h>
int main() {
 double p,s,mi,sum,emi,bank[5],sq;
 int y,n,k,i,yrs,l=0;
    scanf("%lf",&p);
 scanf("%d",&y);
 for(k=0;k<2;k++)
 {
 scanf("%d",&n);
 sum=0;
 for(i=0;i<n;i++)
 {
     scanf("%d",&yrs);
     scanf("%lf",&s);
     mi=0;
     sq=pow((1+s),yrs*12);
     emi= (p*(s))/(1-1/sq);
     sum= sum + emi;
 }
 
 bank[l++]=sum;
 }
 if(bank[0]<bank[1])
 printf("Bank A");
 
 else
 printf("Bank B");
 return 0;
}
Q-3. One Egg
Ans - #include <stdio.h>
int main() {
int m,x,i,a[1000],sum=0,s;
scanf("%d %d",&m,&x);
for(i=0;i<m;i++)
{
scanf("%d",&a[i]);
sum=sum+a[i];
}
if(sum>x)
    printf("Thank you, your order for %d eggs are accepted\n",x);
else
{
    printf("Sorry, we can only supply %d eggs\n",sum-1);
    x=sum-1;
}
for(i=0;i<m;i++)
{
    if(x>=a[i])
    {
        printf("%d\t%d\t%d\n",a[i],a[i],0);
        x=x-a[i];
    }
    else if(x<a[i])
    {
        s=a[i]-x;
     printf("%d\t%d\t%d\n",a[i],x,s);
     x=0;
     }
    
     else if(x==0)
     printf("%d\t%d\t%d\n",a[i],0,a[i]);
   
}
 return 0;
}
Q-3. Milk Man and His Bottles
Ans - #include <stdio.h>
int main()
{
 int n,b=0,i,m,s=0;
 scanf("%d",&m);
 for( i=0;i<m;i++)
 {
 scanf("%d",&n);
 b=n/10;n=n%10;s=s+b;b=0;b=n/7;n=n%7;s=s+b;b=0;b=n/5;n=n%5;s=s+b;b=0;b=n/1;s=s+b;printf("%d\n",s);
 s=0;b=0;
 }
 return 0;
}
Q-4. Bride Hunting
ans - #include<stdio.h>
int main()
{
  int n,m,i,g[50][50],j,p,q,max=0,cnt=0,k=1,c=0,u=1,x[30],y[30],t1,min=0,
  sc[50],e,f,ct=0,a[50],count=0,t2=0,t=0;
  scanf(“%d %d”,&n,&m);
  for(i=1;i<=n;i++)
  {
  for(j=1;j<=m;j++)
  {
  scanf(“%d”,&g[i][j]);
  }
  }
  g[1][1]=0;
  for(i=1;i<=n;i++)
  {
    for(j=1;j<=m;j++)
    {
     cnt=0;
     if(g[i][j]==1)
     {
       t++;
       for(p=i-1;p<=i+1;p++)
       {
         for(q=j-1;q<=j+1;q++)
         {
          
          if(g[p][q]==1)
          {
            cnt++;
          }
         }
       }cnt=cnt-1;
       a[k]=cnt;
       k++;
       }
    }
  }
       for(k=1;k<=t;k++)
       {
         if(a[k]>max)
         max=a[k];
       }
       if(max==0)
       {
       printf(“No suitable girl found”);
       return 0;
       }
       for(k=1;k<=t;k++)
       {
         if(a[k]==max)
         c++;
       }
       for(k=1;k<=t;k++)
       {
         t2=0;
         if(a[k]==max)
         {
           for(i=1;i<=n;i++)
           {
             for(j=1;j<=m;j++)
             {
               if(g[i][j]==1)
               t2++;
               if(t2==k)
               {
                 x[u]=i;
                 y[u]=j;
                 u++;
               }
            }
           }
         }
       }
      t1=u-1;
      if(c==1)
      printf(“%d:%d:%d”,x[1],y[1],max);
      else
      {
        for(u=1;u<=t1;u++)
        {
          sc[u]=sqrt(((x[u]-1) * (x[u]-1)) + ((y[u]-1)*(y[u]-1)));;
        }
        min=sc[1];
        for(u=1;u<=t1;u++)
        {
          if(sc[u]<min)
          min=sc[u];
        }
        for(u=1;u<=t1;u++)
        {
          if(sc[u]==min)
          count++;
        }
        if(count>1)
        printf(“Polygamy not allowed”);
        if(count==1)
        {
          for(u=1;u<=t1;u++)
          {
            if(sc[u]==min)
          printf(“%d:%d:%d”,x[u],y[u],max);
        }
      }
    
     }
   return 0;
}
Q5- The Coin Change Problem
Ans - import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'getWays' function below.
     *
     * The function is expected to return a LONG_INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. LONG_INTEGER_ARRAY c
     */

    public static long getWays(int n, int[] c) {
    // Write your code here
        
        long result[] = new long[n+1];
        result[0]=1;
        for(int i=0;i<c.length;i++){
            for(int j=c[i];j<=n;j++){
                result[j]+=result[j-c[i]];
            }
        }
    return result[n];
    }

}

public class Solution {
    public static void main(String[] args)  {
        Scanner in = new Scanner(System.in);

        int n = in.nextInt();

        int m = in.nextInt();
         int c[] = new int[m];
        for(int i=0;i<m;i++){
            c[i]= in.nextInt();
        }
            

        // Print the number of ways of making change for 'n' units using coins having the values given by 'c'

        long ways = Result.getWays(n, c);

        System.out.println(String.valueOf(ways));
        
    }
}